events {
    worker_connections  1024;
}

http {
    # Upstream definition for English backend
    upstream english-backend {
        server whisper-en-1:4000 weight=1;
        server whisper-en-2:4000 weight=1;
    }

    # Upstream definition for Hebrew backend
    upstream hebrew-backend {
        server whisper-he-1:4000 weight=1;
    }

    server {
        listen 443 ssl;
        server_name guidetube-ai.cs.colman.ac.il;
        ssl_certificate /etc/nginx/server.crt;
        ssl_certificate_key /etc/nginx/server.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        # Define allowed origins
        set $allowed_origin "";

        # Check the Origin of the request
        if ($http_origin ~* "https://guidetube\.cs\.colman\.ac\.il") {
            set $allowed_origin "https://guidetube.cs.colman.ac.il";
        }

        if ($http_origin ~* "http://localhost:5175") {
            set $allowed_origin "http://localhost:5175";
        }

        # Routing for English transcription service
        location /en/ {
            proxy_pass http://english-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header Access-Control-Allow-Origin;
            add_header 'Access-Control-Allow-Origin' "$allowed_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        }

        # Routing for Hebrew transcription service
        location /he/ {
            proxy_pass http://hebrew-backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header Access-Control-Allow-Origin;
            add_header 'Access-Control-Allow-Origin' "$allowed_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        }

        # Default location for other requests
        location / {
            return 404;
        }
    }
}
